{"version":3,"sources":["common/constants.js","homePage.jsx","viewTip.jsx","searchResult.jsx","createMaster.jsx","reportWebVitals.js","createTip.jsx","index.js"],"names":["constants","BASE_URL","HomePage","props","handleKeyDown","e","url","key","window","location","replace","host","state","error","showDeleteBtn","isLoaded","open","allItems","typeUpdate","index","strSearch","console","log","this","getAllData","dataDeleted","setState","fetch","constant","URLSearchParams","method","then","res","json","result","_","isEmpty","id","type","idCollapse","collapse","document","getElementById","style","display","show","map","item","categoryMaster","_id","message","listTips","classDeleted","isNull","deteteTime","undefined","className","onClick","setOpen","name","to","class","onDelete","isEqual","onRestore","subCategory","sub","note","tip","InputGroup","FormControl","placeholder","onChange","target","value","onKeyDown","Button","variant","showAll","Spinner","animation","PropTypes","string","React","Component","ViewTip","tipDetail","search","get","onGetTip","urlBase","tipDisplay","updateTime","dangerouslySetInnerHTML","__html","contents","href","idParent","SearchResult","searchStr","tips","deleteDate","CreateMaster","title","typeCategory","categoryInfo","getCategoryById","headers","body","JSON","stringify","description","event","typeName","prevState","handleChange","onSave","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CreateTip","useState","setIndex","idParentChange","setIdParentChange","setTipDetail","isGetTipLoaded","subList","setSubList","setIsCreate","useEffect","idTmp","idParentTmp","getAllSub","subLists","onReady","editor","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","onError","willEditorRestart","remove","data","getData","DecoupledEditor","length","ReactDOM","render","StrictMode","exact","path"],"mappings":"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","file":"static/js/main.b160fd95.chunk.js","sourcesContent":["const constants = {\r\n     BASE_URL : 'https://tipmanagementnodejs.herokuapp.com/',\r\n     // BASE_URL : 'http://localhost:80/',\r\n};\r\nexport default constants;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport './style/style.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport constant from \"./common/constants\";\r\nimport { Button, InputGroup, FormControl, Spinner } from 'react-bootstrap';\r\nimport { PencilSquare, CaretDown, ArrowCounterclockwise, PlusCircle, Trash, PatchPlus } from 'react-bootstrap-icons';\r\nclass HomePage extends React.Component {\r\n\r\n    static get propTypes() {\r\n        return {\r\n            message: PropTypes.string, // just an example\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            showDeleteBtn: false,\r\n            isLoaded: false,\r\n            open: false,\r\n            allItems: [],\r\n            typeUpdate: null,\r\n            index: null,\r\n            strSearch: '',\r\n\r\n        };\r\n    }\r\n    componentDidMount() {\r\n\r\n        console.log(\"componentDidMount\");\r\n        // setTimeout(() => {\r\n        //     this.showAll(false);\r\n        // }, 700)\r\n\r\n    }\r\n    componentWillMount() {\r\n        console.log(\"componentWillMount\");\r\n        this.getAllData(false);\r\n        // this.setOpen(null);\r\n    }\r\n\r\n    getAllData(dataDeleted) {\r\n        this.setState({\r\n            showDeleteBtn: dataDeleted ? true : false,\r\n        })\r\n        fetch(constant.BASE_URL + \"all-tips?\"\r\n            + new URLSearchParams({\r\n                dataDeleted: dataDeleted,\r\n            }),\r\n            {\r\n                method: 'GET'\r\n            }\r\n        )\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        allItems: !_.isEmpty(result) ? result : [],\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n    onDelete(id, type) {\r\n        fetch(constant.BASE_URL + `${type}/delete/${id}/`\r\n            // + new URLSearchParams({\r\n            //     type: type,\r\n            //     id: id\r\n            // }\r\n            // )\r\n            ,\r\n            {\r\n                method: 'POST',\r\n                // params: { \r\n                //   typeUpdate: this.state.typeUpdate,\r\n                //   id: this.state.empInfo.index }\r\n                // }\r\n            }\r\n        )\r\n        window.location.replace(\"http://\" + window.location.host);\r\n    }\r\n    onRestore(id, type) {\r\n        \r\n        fetch(constant.BASE_URL + `${type}/restore/${id}/`\r\n            // + new URLSearchParams({\r\n            //     type: type,\r\n            //     id: id\r\n            // })\r\n            ,\r\n            {\r\n                method: 'POST',\r\n            }\r\n        )\r\n        window.location.replace(\"http://\" + window.location.host);\r\n    }\r\n    setOpen(idCollapse) {\r\n        var collapse = document.getElementById(`collapse${idCollapse}`);\r\n        if (collapse.style.display === 'none') {\r\n            collapse.style.display = 'block';\r\n        } else {\r\n            collapse.style.display = 'none';\r\n        }\r\n    }\r\n    showAll(show) {\r\n        var display = show ? 'block' : 'none';\r\n        this.state.allItems.map((item) => {\r\n            var collapseClass = document.getElementById(`collapse${item.categoryMaster._id}`);\r\n            collapseClass.style.display = display;\r\n        })\r\n\r\n    }\r\n    handleKeyDown = (e, url) => {\r\n        if (e.key === 'Enter') {\r\n            window.location.replace(\"http://\" + window.location.host + url);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, allItems } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return (\r\n                <div>\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                </div>\r\n                // <div>Loading...</div>\r\n            );\r\n        } else {\r\n            const listTips = !_.isEmpty(allItems) ? allItems.map((item) => {\r\n                var classDeleted = (_.isNull(item.categoryMaster.deteteTime)||item.categoryMaster.deteteTime === undefined) ? \"not-detete\" : \"deteted\"\r\n                return (\r\n                    <div>\r\n\r\n\r\n                        <div className={`master-category-name ${classDeleted}`}\r\n\r\n                        >  <button className='buton-transparent'\r\n                            onClick={() => {\r\n                                this.setOpen(item.categoryMaster._id)\r\n                            }\r\n                            } ><CaretDown /> </button>\r\n                            {item.categoryMaster.name}\r\n\r\n                            <Link className='link-icon' to={`create-category?type=sub&id-parent=${item.categoryMaster._id}`}><PlusCircle class='icon-inlink' /></Link>\r\n                            <Link className='link-icon' to={`create-category?type=master&id=${item.categoryMaster._id}`}><PencilSquare class='icon-inlink' /></Link>\r\n                            {this.state.showDeleteBtn && (\r\n                                <button className='buton-transparent' onClick={() => this.onDelete(item.categoryMaster._id, 'categorymasters')}><Trash /></button>\r\n                            )}\r\n\r\n                            {this.state.showDeleteBtn && _.isEqual(classDeleted, \"deteted\") && (\r\n                                <button className='buton-transparent' onClick={() => this.onRestore(item.categoryMaster._id, 'categorymasters')}><ArrowCounterclockwise /></button>\r\n                            )}\r\n                        </div>\r\n                        <div id={`collapse${item.categoryMaster._id}`}>\r\n                            {item.subCategory.map(sub => {\r\n                                var classDeleted = (_.isNull(sub.deteteTime)||sub.deteteTime === undefined) ? \"not-detete\" : \"deteted\"\r\n                                return (\r\n                                    <div>\r\n                                        <div className={`sub-category-name ${classDeleted}`}>{sub.name}\r\n                                            <Link className='link-icon' to={`create-tip?id-parent=${sub._id}`}><PlusCircle class='icon-inlink' /></Link>\r\n                                            <Link className='link-icon' to={`create-category?type=sub&id=${sub._id}`}><PencilSquare class='icon-inlink' /></Link>\r\n                                            {this.state.showDeleteBtn && (\r\n                                                <button className='buton-transparent' onClick={() => this.onDelete(sub._id, 'subcategories')}><Trash /></button>\r\n                                            )}\r\n                                            {this.state.showDeleteBtn && _.isEqual(classDeleted, \"deteted\") && (\r\n                                                <button className='buton-transparent' onClick={() => this.onRestore(sub._id, 'subcategories')}><ArrowCounterclockwise /></button>\r\n                                            )}\r\n                                        </div>\r\n                                        {sub.note.map(tip => {\r\n                                            var classDeleted = (_.isNull(tip.deteteTime)||tip.deteteTime === undefined) ? \"not-detete\" : \"deteted\"\r\n                                            return (\r\n                                                <div>\r\n                                                    <div className={`tip-detail-name`}\r\n                                                    ><Link className={`link-icon ${classDeleted}`} to={`view-tip?id=${tip._id}`}>{tip.name}</Link>\r\n                                                        <Link className='link-icon' to={`create-tip?id=${tip._id}&id-parent=${sub._id}`}><PencilSquare class='icon-inlink' /></Link>\r\n                                                        {this.state.showDeleteBtn && (\r\n                                                            <button className='buton-transparent' onClick={() => this.onDelete(tip._id, 'notes')}><Trash /></button>\r\n                                                        )}\r\n                                                        {this.state.showDeleteBtn && _.isEqual(classDeleted, \"deteted\") && (\r\n                                                            <button className='buton-transparent' onClick={() => this.onRestore(tip._id, 'notes')}><ArrowCounterclockwise /></button>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        )}\r\n                                    </div>)\r\n                            }\r\n                            )}\r\n                        </div>\r\n                    </div>)\r\n\r\n            }\r\n            ) : null;\r\n            return (\r\n\r\n                <div>\r\n                    <div className='right-block'>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                placeholder=\"Search\"\r\n                                //   aria-label=\"Recipient's username\"\r\n                                //   aria-describedby=\"basic-addon2\"\r\n                                onChange={e => this.setState({ strSearch: e.target.value })}\r\n                                onKeyDown={e => this.handleKeyDown(e, `/search?searchStr=${this.state.strSearch}`)}\r\n                            />\r\n                            <Button variant=\"outline-secondary\" id=\"button-addon2\">\r\n                                <Link to={`search?searchStr=${this.state.strSearch}`}>Search</Link>\r\n                            </Button>\r\n                        </InputGroup>\r\n                    </div>\r\n                    <Button variant=\"success\" onClick={() => this.showAll(true)}>Show all</Button>\r\n                    <Button variant=\"success\" onClick={() => this.showAll(false)}>Close all</Button>\r\n                    <Button variant=\"success\" onClick={() => this.getAllData(true)}>Manage Data</Button>\r\n                    <Button variant=\"success\" onClick={() => this.getAllData(false)}>Home page</Button>\r\n                    <br /><br />\r\n                    <div className=\"frame\">\r\n                        {listTips}\r\n                    </div>\r\n                    <br />\r\n                    <button ><Link to={`create-category?type=master`}><PatchPlus />New Master Tip</Link></button>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport './style/style.css';\r\nimport constant from \"./common/constants\";\r\nimport Button from '@restart/ui/esm/Button';\r\nimport { PencilSquare } from 'react-bootstrap-icons';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ViewTip extends React.Component {\r\n\r\n    static get propTypes() {\r\n        return {\r\n            message: PropTypes.string, // just an example\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            tipDetail: {},\r\n            typeUpdate: null,\r\n            index: null,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        let id = (new URLSearchParams(window.location.search)).get(\"id\");\r\n        this.onGetTip(id);\r\n    }\r\n    onGetTip(index) {\r\n        fetch(constant.BASE_URL + \"notes/\"  +index\r\n        // + new URLSearchParams({\r\n        //     id: index\r\n        //   })\r\n          ,\r\n        {\r\n            method: 'GET'\r\n        }\r\n    )\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    tipDetail: !_.isEmpty(result) ? result : {},\r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        )\r\n      }\r\n    render() {\r\n        const { error, isLoaded, tipDetail } = this.state;\r\n        var urlBase =\"http://\"+window.location.host;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            const tipDisplay = !_.isEmpty(tipDetail) ? (\r\n                    <div>\r\n                        <div className=\"tip-name\"> {tipDetail.name} </div>\r\n                        <div className=\"tip-updateTime\"> {tipDetail.updateTime} </div>\r\n                        <br/>\r\n                     <br/>\r\n                        <div className=\"tip-contents\" dangerouslySetInnerHTML={{ __html: tipDetail.contents }}></div>\r\n                    </div>\r\n            ): null;\r\n            return (\r\n\r\n                <div>\r\n\r\n                    <div className=\"frame\">\r\n                    <Button ><a href={`${urlBase}/create-tip?id=${tipDetail._id}&id-parent=${tipDetail.idParent}`}>\r\n                    Edit<PencilSquare className='icon-inlink'/></a></Button>\r\n                    <br/>\r\n                    <br/>\r\n                        {tipDisplay}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ViewTip;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport './style/style.css';\r\n// import { Link } from \"react-router-dom\";\r\nimport constant from \"./common/constants\";\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { Circle } from 'react-bootstrap-icons';\r\nclass SearchResult extends React.Component {\r\n\r\n    static get propTypes() {\r\n        return {\r\n            message: PropTypes.string, // just an example\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            searchStr: \"\",\r\n            isLoaded: false,\r\n            open: false,\r\n            tips: [],\r\n            typeUpdate: null,\r\n            index: null,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n\r\n        console.log(\"componentDidMount\");\r\n        this.setState({\r\n            searchStr: (new URLSearchParams(window.location.search)).get(\"searchStr\"),\r\n\r\n        }, () => {\r\n            this.search()\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        console.log(\"componentWillMount\");\r\n        // this.setOpen(null);\r\n    }\r\n    onDelete(id, type) {\r\n        fetch(constant.BASE_URL + \"delete-temp?\"\r\n            + new URLSearchParams({\r\n                type: type,\r\n                id: id\r\n            }),\r\n            {\r\n                method: 'PUT',\r\n                // params: { \r\n                //   typeUpdate: this.state.typeUpdate,\r\n                //   id: this.state.empInfo.index }\r\n                // }\r\n            }\r\n        )\r\n        window.location.replace(\"http://\" + window.location.host);\r\n    }\r\n    search() {\r\n        fetch(constant.BASE_URL + \"search?\"\r\n            + new URLSearchParams({\r\n                strSearch: this.state.searchStr,\r\n            }),\r\n            {\r\n                method: 'GET'\r\n            }\r\n        )\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        tips: !_.isEmpty(result) ? result : [],\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n    render() {\r\n        const { error, isLoaded, tips } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return (\r\n                <div>\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                </div>\r\n                // <div>Loading...</div>\r\n            );\r\n        } else {\r\n            var urlBase = \"http://\" + window.location.host;\r\n            const listTips = !_.isEmpty(tips) ? tips.map(tip => {\r\n                var classDeleted = _.isNull(tip.deleteDate) ? \"not-detete\" : \"deteted\"\r\n                return (\r\n                    <div>\r\n                        <div className={`tip-detail-name`} >\r\n                            {/* <Link className={`link-icon ${classDeleted}`} to={`${urlBase}/view-tip?id=${tip.id}`}>{tip.name}</Link> */}\r\n                            <Circle className='icon-inlink' /> <a href={`${urlBase}/view-tip?id=${tip.id}`} className={`link-icon ${classDeleted}`}\r\n                            >{tip.name}</a><br /><br />\r\n                            {/* <button className='buton-transparent' onClick={() => this.onDelete(tip.id, 'tip')}>delete</button> */}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            ) : null;\r\n            return (\r\n\r\n                <div>\r\n                    <div className=\"frame\">\r\n                        {listTips}\r\n                    </div>\r\n                    <br />\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default SearchResult;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style/style.css';\r\nimport constant from \"./common/constants\";\r\nimport _ from 'lodash';\r\n\r\nclass CreateMaster extends React.Component {\r\n\r\n    static get propTypes() {\r\n        return {\r\n            message: PropTypes.string, // just an example\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            index: null,\r\n            idParent: null,\r\n            title: null,\r\n            typeCategory: null,\r\n            categoryInfo: {\r\n\r\n            },\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            index: (new URLSearchParams(window.location.search)).get(\"id\"),\r\n            idParent: (new URLSearchParams(window.location.search)).get(\"id-parent\"),\r\n            typeCategory: (new URLSearchParams(window.location.search)).get(\"type\"),\r\n\r\n        }, () => {\r\n            if (_.isNull(this.state.typeCategory)) {\r\n                window.location.replace(\"http://\" + window.location.host);\r\n            }\r\n            this.setState(\r\n                {\r\n                    title: (_.isNull(this.state.index) ? 'Create ' : 'Edit ') + this.state.typeCategory\r\n                }\r\n            )\r\n            if (!_.isNull(this.state.index)) {\r\n                this.getCategoryById();\r\n            }\r\n        });\r\n\r\n    }\r\n    getCategoryById() {\r\n        var url = constant.BASE_URL + (this.state.typeCategory === 'sub' ? \"subcategories\" : \"categorymasters\")+\"/\"+this.state.index;\r\n        fetch(url \r\n        //     + new URLSearchParams({\r\n        //     id: this.state.index,\r\n        // })\r\n        ,\r\n            {\r\n                method: 'GET'\r\n            }\r\n        )\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        categoryInfo: !_.isEmpty(result) ? result : {},\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n    onSave() {\r\n\r\n        const idParent = (this.state.idParent)?this.state.idParent:this.state.typeCategory.idParent;\r\n        fetch(constant.BASE_URL + (this.state.typeCategory === 'sub' ? \"subcategories\" : \"categorymasters\")+'/save', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            // refer to https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\r\n            // to get more infor about create json with stringify\r\n\r\n            body: JSON.stringify({\r\n                id: this.state.index,\r\n                name: this.state.categoryInfo.name,\r\n                description: this.state.categoryInfo.description,\r\n                idParent: idParent,\r\n                typeCategory: this.state.typeCategory,\r\n                // typeUpdate: _.isNull(this.state.index) ? 'insert' : 'update',\r\n            })\r\n        })\r\n            .then(\r\n                // history.push('/new-location')\r\n                // this.props.history.push(\"/\")\r\n            )\r\n\r\n    }\r\n\r\n    handleChange(event, typeName) {\r\n        switch (typeName) {\r\n            // case 'id':\r\n            //     this.setState(prevState => ({\r\n            //       categoryInfo: {                   // object that we want to update\r\n            //         ...prevState.categoryInfo,    // keep all other key-value pairs\r\n            //         id: event.target.value       // update the value of specific key\r\n            //       }\r\n            //     }))\r\n            //     break;\r\n            case 'name':\r\n                this.setState(prevState => ({\r\n                    categoryInfo: {\r\n                        ...prevState.categoryInfo,\r\n                        name: event.target.value\r\n                    }\r\n                }))\r\n                break;\r\n            case 'description':\r\n                this.setState(prevState => ({\r\n                    categoryInfo: {\r\n                        ...prevState.categoryInfo,\r\n                        description: event.target.value\r\n                    }\r\n                }))\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <div id='title-edit-type'>{this.state.title}</div>\r\n                <div className=\"frame\">\r\n                    <form >\r\n                        {/* <input type=\"hidden\" name=\"type-update\" value=\"update\" /> */}\r\n\r\n                        <div>\r\n                            <div>\r\n                                <input type=\"hidden\" name=\"index\" value={this.state.categoryInfo.id}\r\n                                    onChange={(e) => {\r\n                                        this.handleChange(e, \"id\")\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n\r\n                            <div>Name:</div>\r\n                            <div>\r\n                                <textarea className='input-name' value={this.state.categoryInfo.name}\r\n                                    onChange={(e) => {\r\n                                        this.handleChange(e, \"name\")\r\n                                    }} ></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n\r\n                            <div>Description:</div>\r\n                            <div>\r\n                                <textarea className='input-name' value={this.state.categoryInfo.description}\r\n                                    onChange={(e) => {\r\n                                        this.handleChange(e, \"description\")\r\n                                    }} ></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <br />\r\n                            <div>\r\n                                <input type=\"submit\" value=\"Save\" onClick={() => this.onSave()} />\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateMaster;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from \"react\";\r\nimport './style/style.css';\r\nimport constant from \"./common/constants\";\r\nimport _ from 'lodash';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\r\nconst CreateTip = () => {\r\n    const [index, setIndex] = useState(null);\r\n    const [idParentChange, setIdParentChange] = useState(null);\r\n    const [tipDetail, setTipDetail] = useState({\r\n        name: null, id: null,\r\n        contents: null, idParent: null\r\n    });\r\n    const [state, setState] = useState({\r\n        isGetTipLoaded: false,\r\n    });\r\n    const [subList, setSubList] = useState([]);\r\n    const [isCreate, setIsCreate] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        var idTmp = new URLSearchParams(window.location.search).get(\"id\");\r\n        var idParentTmp = new URLSearchParams(window.location.search).get(\"id-parent\")\r\n        setIndex(idTmp);\r\n        setTipDetail(tipDetail => ({ ...tipDetail, idParent: idParentTmp, }));\r\n        if (_.isNull(idParentTmp)) {\r\n            window.location.replace(\"http://\" + window.location.host);\r\n        }\r\n        if (!_.isNull(idTmp)) {\r\n            setIsCreate(false);\r\n            onGetTip(idTmp);\r\n            getAllSub();\r\n        }\r\n    },[]);\r\n    // useEffect(() => {\r\n    //     var idTmp = new URLSearchParams(window.location.search).get(\"id\");\r\n    //     var idParentTmp = new URLSearchParams(window.location.search).get(\"id-parent\")\r\n    //     setIndex(idTmp);\r\n    //     setTipDetail(tipDetail => ({ ...tipDetail, idParent: idParentTmp, }));\r\n    //     if (_.isNull(idParentTmp)) {\r\n    //         window.location.replace(\"http://\" + window.location.host);\r\n    //     }\r\n    //     if (!_.isNull(idTmp)) {\r\n    //         setIsCreate(false);\r\n    //         onGetTip(idTmp);\r\n    //         getAllSub();\r\n    //     }\r\n    // },[index]);\r\n    \r\n    const onGetTip = (id) => {\r\n        fetch(constant.BASE_URL + \"notes/\"+id\r\n            // + new URLSearchParams({\r\n            //     id: id,\r\n            // }\r\n            // )\r\n            ,\r\n            {\r\n                method: 'GET'\r\n            }\r\n        )\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // setTipDetail(!_.isEmpty(result) ? result : {})\r\n                    if (!_.isEmpty(result)) {\r\n\r\n                        setTipDetail({\r\n                            ...tipDetail, id: result.id,\r\n                            name: result.name,\r\n                            contents: result.contents,\r\n                            idParent: result.idParent,\r\n                        })\r\n\r\n                    }\r\n                    setState({ ...state, isGetTipLoaded: true, })\r\n                },\r\n            )\r\n    }\r\n    const getAllSub = () => {\r\n        fetch(constant.BASE_URL + \"subcategories\"\r\n            ,\r\n            {\r\n                method: 'GET'\r\n            }\r\n        )\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    // setTipDetail(!_.isEmpty(result) ? result : {})\r\n                    if (!_.isEmpty(result)) {\r\n\r\n                        setSubList(result)\r\n\r\n                    }\r\n                },\r\n            )\r\n    }\r\n\r\n    const onSave = () => {\r\n        var idParent = (_.isNull(idParentChange) || idParentChange.length === 0) ? tipDetail.idParent : idParentChange\r\n        fetch(constant.BASE_URL + 'notes/save', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            // refer to https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\r\n            // to get more infor about create json with stringify\r\n\r\n            body: JSON.stringify({\r\n                id: index,\r\n                name: tipDetail.name,\r\n                contents: tipDetail.contents,\r\n                idParent: idParent,\r\n                typeUpdate: _.isNull(index) ? 'insert' : 'update',\r\n            })\r\n        })\r\n            .then(\r\n                // history.push('/new-location')\r\n                // this.props.history.push(\"/\")\r\n            )\r\n    }\r\n\r\n    const handleChange = (value, typeName) => {\r\n        if (state.isGetTipLoaded || _.isNull(index)) {\r\n\r\n            switch (typeName) {\r\n                case 'name':\r\n                    setTipDetail(tipDetail => ({ ...tipDetail, name: value, }));\r\n                    break;\r\n                case 'contents':\r\n                    setTipDetail(tipDetail => ({ ...tipDetail, contents: value, }));\r\n                    break;\r\n                case 'idParent':\r\n                    setIdParentChange(value);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    const subLists = !_.isEmpty(subList) ? subList.map((sub) => {\r\n        return (\r\n            <option value={`${sub.id}`}>{sub.name}</option>\r\n        )\r\n    }) : null;\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"frame\">\r\n                <form >\r\n                    {/* <input type=\"hidden\" name=\"type-update\" value=\"update\" /> */}\r\n\r\n                    <div>\r\n                        <div>\r\n                            <input type=\"hidden\" name=\"index\" value={tipDetail.id}\r\n                                onChange={(e) => {\r\n                                    handleChange(e.target.value, \"id\")\r\n                                }} />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n\r\n                        <div>Name:</div>\r\n                        <div>\r\n                            <textarea className='input-name' value={tipDetail.name}\r\n                                onChange={(e) => {\r\n                                    handleChange(e.target.value, \"name\")\r\n                                }} ></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n\r\n                        <div>class:</div>\r\n                        <div>\r\n                            <select onChange={(e) => {\r\n                                handleChange(e.target.value, \"idParent\")\r\n                            }} >\r\n                                <option value=''></option>\r\n                                {subLists}\r\n                            </select>\r\n                            {/* <input type ='text'  value={tipDetail.idParent}\r\n                                onChange={(e) => {\r\n                                    // handleChange(e.target.value, \"idParent\")\r\n                                }} ></input> */}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n\r\n                        <div>contents:</div>\r\n                        <div>\r\n                            <CKEditor\r\n                                onReady={editor => {\r\n                                    console.log('Editor is ready to use!', editor);\r\n\r\n                                    // Insert the toolbar before the editable area.\r\n                                    editor.ui.getEditableElement().parentElement.insertBefore(\r\n                                        editor.ui.view.toolbar.element,\r\n                                        editor.ui.getEditableElement()\r\n                                    );\r\n\r\n                                    // this.editor = editor;\r\n                                }}\r\n                                onError={({ willEditorRestart }) => {\r\n                                    // If the editor is restarted, the toolbar element will be created once again.\r\n                                    // The `onReady` callback will be called again and the new toolbar will be added.\r\n                                    // This is why you need to remove the older toolbar.\r\n                                    if (willEditorRestart) {\r\n                                        this.editor.ui.view.toolbar.element.remove();\r\n                                    }\r\n                                }}\r\n                                onChange={(event, editor) => {\r\n                                    const data = editor.getData();\r\n                                    handleChange(data, \"contents\")\r\n\r\n                                }\r\n                                }\r\n                                editor={DecoupledEditor}\r\n                                data={tipDetail.contents}\r\n                            // config={ /* the editor configuration */ }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <br />\r\n                        <div>\r\n                            <input type=\"submit\" value=\"Save\" onClick={() => onSave()} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            {/* <button onClick ={()=> this.test()}>fx</button> */}\r\n            {/* <Editor /> */}\r\n            {/* <textarea id=\"editor\"></textarea> */}\r\n        </div>\r\n    );\r\n\r\n    // }\r\n}\r\n\r\nexport default CreateTip;","import React from 'react';\nimport ReactDOM from 'react-dom';\n/* import './index.css';\nimport App from './App'; */\nimport HomePage from \"./homePage\";\nimport ViewTip from \"./viewTip\";\nimport SearchResult from \"./searchResult\";\nimport CreateMaster from \"./createMaster\";\nimport reportWebVitals from './reportWebVitals';\nimport {Link, Route,  Routes, BrowserRouter } from \"react-router-dom\";\nimport CreateTip from './createTip';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <div><Link to=\"/\">Home</Link></div>\n    <br/>\n    <Routes>\n        <Route exact path=\"/\" element={<HomePage/>} />\n         <Route path=\"/view-tip\" element={<ViewTip/>} />\n         <Route path=\"/create-category\" element={<CreateMaster/>} />\n         <Route path=\"/create-tip\" element={<CreateTip/>} />\n         <Route path=\"/search\" element={<SearchResult/>} />\n          \n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}